jsx-no-script-url
jsx-no-useless-fragment
no-adjacent-inline-elements

react/no-access-state-in-setstate: 'error',
react/no-array-index-key: 'error',
react/no-children-prop: 'error',
react/no-danger: 'warn',
react/no-danger-with-children: 'error',
react/no-deprecated: ['error'],
react/no-did-mount-set-state: 'off',
react/no-did-update-set-state: 'error',
react/no-direct-mutation-state: 'off',
react/no-find-dom-node: 'error',
react/no-is-mounted: 'error',
react/no-multi-comp: 'off',
react/no-set-state: 'off',
react/no-string-refs: 'error',
react/no-redundant-should-component-update: 'error',
react/no-render-return-value: 'error',
react/no-this-in-sfc: 'error',
react/no-typos: 'error',
react/no-unescaped-entities: 'error',
react/no-unknown-property: 'error',
react/no-unsafe: 'off',
react/no-unused-prop-types: ['error', {
      customValidators: [
      ],
      skipShapeProps: true,
    }],
react/no-unused-state: 'error',
react/no-will-update-set-state: 'error',
react/prefer-es6-class: ['error', 'always'],
react/prefer-read-only-props: 'off',
react/prefer-stateless-function: ['error', { ignorePureComponents: true }],
react/prop-types: ['error', {
      ignore: [],
      customValidators: [],
      skipUndeclared: false
    }],
react/react-in-jsx-scope: 'error',
react/require-default-props: ['error', {
  forbidDefaultForRequired: true,
}],
react/require-optimization: ['off', { allowDecorators: [] }],
react/require-render-return: 'error',
react/self-closing-comp: 'error',
react/sort-comp: ['error', {
      order: [
        'static-variables',
        'static-methods',
        'instance-variables',
        'lifecycle',
        '/^on.+$/',
        'getters',
        'setters',
        '/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
        'instance-methods',
        'everything-else',
        'rendering',
      ],
      groups: {
        lifecycle: [
          'displayName',
          'propTypes',
          'contextTypes',
          'childContextTypes',
          'mixins',
          'statics',
          'defaultProps',
          'constructor',
          'getDefaultProps',
          'getInitialState',
          'state',
          'getChildContext',
          'getDerivedStateFromProps',
          'componentWillMount',
          'UNSAFE_componentWillMount',
          'componentDidMount',
          'componentWillReceiveProps',
          'UNSAFE_componentWillReceiveProps',
          'shouldComponentUpdate',
          'componentWillUpdate',
          'UNSAFE_componentWillUpdate',
          'getSnapshotBeforeUpdate',
          'componentDidUpdate',
          'componentDidCatch',
          'componentWillUnmount'
        ],
        rendering: [
          '/^render.+$/',
          'render'
        ],
      },
    }],
react/state-in-constructor: ['error', 'always'],
react/static-property-placement: ['error', 'property assignment'],

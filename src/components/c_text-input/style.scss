@use "sass:math";
@use "@/scss/utils";

$borderWidth: 1px;
$border: $borderWidth solid utils.$color-lightGray;
$borderRadius: 2px;
$padding: 8px;
$fontSize: 20px;
$lineHeight: 1;
$adjacentColor: #777777;

$height: $fontSize * $lineHeight + ($padding + $borderWidth) * 2;

.root {
  display: flex;
  font-size: $fontSize;
  line-height: $lineHeight;
}

.label {
  flex-grow: 1;
}

.field {
  display: block;
  height: $height;
  padding: $padding;
  border: $border;
  border-radius: $borderRadius;
  font-size: inherit;
  line-height: inherit;
  background-color: white;
  width: 100%;

  &_adjacent_left {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  &_adjacent_right {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
}

._adjacent {
  border: $border;
  padding-block: $padding;
  background-color: white;
}

.tipChar {
  composes: _adjacent;

  width: $height + 4px;
  border-inline-end-style: none;
  border-top-left-radius: $borderRadius;
  border-bottom-left-radius: $borderRadius;
  text-align: center;
  color: $adjacentColor;
}

.clear {
  composes: _adjacent;

  position: relative;
  width: $height;
  border-inline-start-style: none;
  border-top-right-radius: $borderRadius;
  border-bottom-right-radius: $borderRadius;

  @mixin stick($rotationAngle) {
    $stick-width: math.div($height, 2);
    $stick-height: 1px;

    content: "";
    position: absolute;
    top: calc(50% - math.div($stick-height, 2));
    left: calc(50% - math.div($stick-width, 2));
    transform: rotate($rotationAngle);
    width: $stick-width;
    height: $stick-height;
    background-color: $adjacentColor;
  }

  &::before {
    @include stick(45deg);
  }

  &::after {
    @include stick(-45deg);
  }
}

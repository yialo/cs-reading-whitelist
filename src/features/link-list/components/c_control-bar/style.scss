@use "@/scss/utils";

.root {
  display: flex;
  flex-direction: column;
  margin-left: calc(var(--size_paddingX) * -1);
  margin-right: calc(var(--size_paddingX) * -1);
  border-bottom: 1px solid #bdbdbd;
  padding-bottom: 16px;
  padding-left: var(--size_paddingX);
  padding-right: var(--size_paddingX);
}

.adaptiveRow {
  display: flex;

  @media (max-width: utils.$viewport-xs-max) {
    flex-wrap: wrap;
  }

  @media (min-width: utils.$viewport-sm-min) {
    flex-wrap: nowrap;
    align-items: center;
  }
}

.amountMeter {
  margin-top: 0;
  margin-bottom: 0;
}

.filter {
  composes: adaptiveRow;
  margin-bottom: 16px;
}

.searchbar {
  margin-bottom: 16px;
}

.sorting {
  composes: adaptiveRow;
  margin-bottom: 16px;

  &__tip {
    font-size: 18px;

    @media (max-width: utils.$viewport-xs-max) {
      margin-bottom: 8px;
      width: 100%;
    }

    @media (min-width: utils.$viewport-sm-min) {
      margin-right: 16px;
      width: auto;
    }
  }

  &__controls {
    display: grid;
    grid-auto-flow: column;
    column-gap: 16px;
    font-size: 18px;
  }

  &__button {
    position: relative;
    text-align: left;
    color: var(--color_text-caption);
    background-color: transparent;

    &::before {
      content: "";
      position: absolute;
      bottom: -2px;
      width: 100%;
      height: 1px;
      background-image: repeating-linear-gradient(
        to right,
        var(--color_text-caption) 0 3px,
        transparent 3px 5px,
      );
    }

    &:disabled {
      --color_text-caption: #{utils.$color-light-textCaptionAlpha};

      @include utils.darkTheme() {
        --color_text-caption: #{utils.$color-dark-textCaptionAlpha};
      }

      &::before {
        background-image: none;
      }
    }
  }
}
